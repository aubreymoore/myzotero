var iNatAPI=angular.module("iNatAPI",[]);iNatAPI.factory("shared",["$http","$rootScope","$filter",function($http,$rootScope,$filter){var basicGet=function(url,options){return options=options||{},options.cache!==!0&&(options.cache=!1),$http.get(url,{cache:options.cache,timeout:2e4}).then(function(response){return response},function(){})},numberWithCommas=function(num){return _.isNumber(num)?num.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","):num},t=function(k,options){return options=options||{},I18n.t(k,options)},taxonStatusTitle=function(taxon){if(taxon.conservation_status){var title=$filter("capitalize")(taxon.conservationStatus(),"title");return title=taxon.conservation_status&&taxon.conservation_status.place?t("status_in_place",{status:title,place:taxon.conservation_status.place.display_name}):t("status_globally",{status:title})}},taxonMeansTitle=function(taxon){if(taxon.establishment_means){var title=$filter("capitalize")(t(taxon.establishment_means.establishment_means),"title");return taxon.establishment_means&&taxon.establishment_means.place&&(title=t("status_in_place",{status:$filter("capitalize")(t(taxon.establishment_means.establishment_means,{locale:"en"}),"title"),place:taxon.establishment_means.place.display_name})),title}},backgroundIf=function(url){return url?{"background-image":"url('"+url+"')"}:void 0},offsetCenter=function(options,callback){if(!options.map)return callback();var overlay=new google.maps.OverlayView;overlay.draw=function(){},overlay.setMap(options.map);var proj=overlay.getProjection(),currentCenter=options.map.getCenter();if(!proj)return options.attempts=options.attempts||0,options.attempts+=1,options.attempts>=10?callback(currentCenter):void setTimeout(function(){offsetCenter(options,callback)},5);var cPoint=proj.fromLatLngToDivPixel(currentCenter);cPoint.x=cPoint.x+options.left,cPoint.y=cPoint.y+options.up;var newCenter=proj.fromDivPixelToLatLng(cPoint);overlay.setMap(null),overlay=null,callback(newCenter)},processPoints=function(geometry,callback,thisArg){geometry&&(geometry instanceof google.maps.LatLng?callback.call(thisArg,geometry):geometry instanceof google.maps.Data.Point?callback.call(thisArg,geometry.get()):geometry.getArray().forEach(function(g){processPoints(g,callback,thisArg)}))},stringStartsWith=function(str,pattern,position){return position=_.isNumber(position)?position:0,str.toLowerCase().lastIndexOf(pattern.toLowerCase(),position)===position},pp=function(obj){console.log(JSON.stringify(obj,null,"  "))};return{basicGet:basicGet,numberWithCommas:numberWithCommas,t:t,taxonStatusTitle:taxonStatusTitle,taxonMeansTitle:taxonMeansTitle,backgroundIf:backgroundIf,offsetCenter:offsetCenter,processPoints:processPoints,stringStartsWith:stringStartsWith,pp:pp}}]),iNatAPI.directive("inatCalendarDate",["shared",function(shared){return{scope:{time:"=",date:"=",timezone:"="},link:function(scope){scope.dateString=function(){if(!scope.date)return shared.t("unknown");var dateString,date=moment(scope.date),now=moment(new Date);return dateString=date.isSame(now,"day")?I18n.t("today"):date.isSame(now.subtract(1,"day"),"day")?I18n.t("yesterday"):date.format("ll")},scope.timeString=function(){return scope.time?(scope.timezone=scope.timezone||"UTC",moment(scope.time).tz(scope.timezone).format("LT z")):void 0}},template:'<span class="date">{{ dateString() }}</span><span class="time">{{ timeString() }}</span>'}}]),iNatAPI.directive("inatTaxon",["shared",function(shared){return{scope:{taxon:"=",url:"@"},link:function(scope){scope.iconicTaxonNameForID=function(iconicTaxonID){var t=window.ICONIC_TAXA[iconicTaxonID];return t?t.name:"Unknown"},scope.shared=shared},templateUrl:"ang/templates/shared/taxon.html"}}]),iNatAPI.directive("observationSnippet",["shared",function(shared){return{scope:{o:"="},link:function(scope){scope.shared=shared},templateUrl:"ang/templates/shared/observation.html"}}]),iNatAPI.directive("userIcon",["shared",function(shared){return{scope:{u:"="},link:function(scope){scope.shared=shared},templateUrl:"ang/templates/shared/user_icon.html"}}]),iNatAPI.directive("userLogin",[function(){return{scope:{u:"="},templateUrl:"ang/templates/shared/user_login.html"}}]);var iNatModels=iNatModels||{};iNatModels.Observation=function(attrs){var that=this;_.each(attrs,function(value,attr){that[attr]="taxon"===attr?new iNatModels.Taxon(value):"user"===attr?new iNatModels.User(value):value})},iNatModels.Observation.prototype.photo=function(){if(!_.isUndefined(this.cachedPhoto))return this.cachedPhoto;if(this.photos&&this.photos.length>0){var url=this.photos[0].url;this.cachedPhoto=url?url.replace(/square.(jpe?g|png|gif|\?)/i,function(match,$1){return"medium."+$1}):null}return this.cachedPhoto},iNatModels.Observation.prototype.hasMedia=function(){return this.photo()||this.hasSound()},iNatModels.Observation.prototype.hasSound=function(){return this.sounds&&this.sounds.length>0},iNatModels.Observation.prototype.displayPlace=function(){return this.place_guess?this.place_guess:this.latitude?[this.latitude,this.longitude].join(","):I18n.t("unknown")},iNatModels.Observation.prototype.qualityGrade=function(){return I18n.t("research"==this.quality_grade?"research_grade":this.quality_grade||"casual")};var iNatModels=iNatModels||{};iNatModels.Place=function(attrs){var that=this;_.each(attrs,function(value,attr){that[attr]=value})},iNatModels.Place.prototype.placeTypeLabel=function(){if(this.place_type){var label=iNatModels.Place.PLACE_TYPES[this.place_type];return label?I18n.t("place_geo.geo_planet_place_types."+label.replace(/ /g,"_")):void 0}},iNatModels.Place.PLACE_TYPES={0:"Undefined",2:"Street Segment",5:"Intersection",6:"Street",7:"Town",8:"State",9:"County",10:"Local Administrative Area",12:"Country",13:"Island",14:"Airport",15:"Drainage",16:"Land Feature",17:"Miscellaneous",18:"Nationality",19:"Supername",20:"Point of Interest",21:"Region",24:"Colloquial",25:"Zone",26:"Historical State",27:"Historical County",29:"Continent",33:"Estate",35:"Historical Town",36:"Aggregate",100:"Open Space",101:"Territory",102:"District",103:"Province",1000:"Municipality",1001:"Parish",1002:"Department Segment",1003:"City Building",1004:"Commune",1005:"Governorate",1006:"Prefecture",1007:"Canton",1008:"Republic",1009:"Division",1010:"Subdivision",1011:"Village block",1012:"Sum",1013:"Unknown",1014:"Shire",1015:"Prefecture City",1016:"Regency",1017:"Constituency",1018:"Local Authority",1019:"Poblacion",1020:"Delegation"};var iNatModels=iNatModels||{};iNatModels.Taxon=function(attrs){var that=this;_.each(attrs,function(value,attr){that[attr]=value})},iNatModels.Taxon.ICONIC_TAXA=[{id:1,name:"Animalia",rank:"kingdom"},{id:3,name:"Aves",rank:"class"},{id:20978,name:"Amphibia",rank:"class"},{id:26036,name:"Reptilia",rank:"class"},{id:40151,name:"Mammalia",rank:"class"},{id:47115,name:"Mollusca",rank:"phylum"},{id:47119,name:"Arachnida",rank:"class"},{id:47126,name:"Plantae",rank:"kingdom"},{id:47158,name:"Insecta",rank:"class"},{id:47170,name:"Fungi",rank:"kingdom"},{id:47178,name:"Actinopterygii",rank:"class"},{id:47686,name:"Protozoa",rank:"kingdom"},{id:48222,name:"Chromista",rank:"kingdom"}],iNatModels.Taxon.prototype.iconicTaxonName=function(){var that=this,iconicTaxon=_.find(iNatModels.Taxon.ICONIC_TAXA,function(t){return t.id==that.iconic_taxon_id});return iconicTaxon?iconicTaxon.name:"unknown"},iNatModels.Taxon.prototype.photo=function(){return this.default_photo?this.default_photo.medium_url:this.default_photo_url},iNatModels.Taxon.prototype.photoTag=function(){return this.default_photo?"<img src='"+this.default_photo.square_url+"'/>":"<i class='icon icon-iconic-"+this.iconicTaxonName().toLowerCase()+"'/>"},iNatModels.Taxon.prototype.photoLicenseShort=function(){return this.default_photo?this.default_photo.license_code&&"c"!=this.default_photo.license_code?this.default_photo.license_code.match(/^cc-/)?"CC":this.default_photo.license_code.toUpperCase():"\xa9":void 0},iNatModels.Taxon.prototype.photoAttribution=function(){return this.default_photo?I18n.t("photo")+": "+this.default_photo.attribution:null},iNatModels.Taxon.prototype.establishmentMeansCode=function(){if(!_.isUndefined(this.establishment_means_code))return this.establishment_means_code;switch(this.establishment_means&&this.establishment_means.establishment_means){case"native":this.establishment_means_code="N";break;case"endemic":this.establishment_means_code="E";break;case"introduced":this.establishment_means_code="IN";break;default:this.establishment_means_code=null}return this.establishment_means_code},iNatModels.Taxon.prototype.conservationStatus=function(){if(!_.isUndefined(this.conservationStatusName))return this.conservationStatusName;switch(this.conservation_status&&this.conservation_status.status){case"NE":this.conservationStatusName=I18n.t("not_evaluated");break;case"DD":this.conservationStatusName=I18n.t("data_deficient");break;case"LC":this.conservationStatusName=I18n.t("least_concern");break;case"NT":this.conservationStatusName=I18n.t("near_threatened");break;case"VU":this.conservationStatusName=I18n.t("vulnerable");break;case"EN":this.conservationStatusName=I18n.t("endangered");break;case"CR":this.conservationStatusName=I18n.t("critically_endangered");break;case"EW":this.conservationStatusName=I18n.t("extinct_in_the_wild");break;case"EX":this.conservationStatusName=I18n.t("extinct");break;default:this.conservationStatusName=null}return this.conservationStatusName},iNatModels.Taxon.prototype.preferredCommonName=function(options){options=options||{},options.locale=(options.locale||"en").split("-")[0];var nameInLocale,nameInPlace,nameInAncestorPlace;return _.each(this.names,function(n){options.preferredPlace&&n.place_taxon_names&&(_.find(n.place_taxon_names,function(ptn){return ptn.place_id===options.preferredPlace.id})?nameInPlace=n.name:_.find(n.place_taxon_names,function(ptn){return _.includes(options.preferredPlace.ancestor_place_ids,ptn.place_id)})&&(nameInAncestorPlace=n.name)),nameInLocale||n.locale!==options.locale||(nameInLocale=n.name)}),nameInLocale=nameInPlace||nameInAncestorPlace||nameInLocale,options.defaultToEnglish!==!0||nameInLocale||"en"==options.locale?nameInLocale:this.preferredCommonName(_.extend({},options,{locale:"en"}))};var iNatModels=iNatModels||{};iNatModels.User=function(attrs){var that=this;_.each(attrs,function(value,attr){that[attr]=value})},iNatModels.User.default_thumbnail=function(){return"/attachment_defaults/users/icons/defaults/thumb.png"},iNatAPI.factory("ObservationsFactory",["shared",function(shared){var show=function(id,params){var url="//api.inaturalist.org/v1/observations/"+id;return params&&(url+="?"+$.param(params)),shared.basicGet(url,{cache:!0})},search=function(params){var url="//api.inaturalist.org/v1/observations";return params&&(url+="?"+$.param(params)),shared.basicGet(url)},speciesCounts=function(params){var url="//api.inaturalist.org/v1/observations/species_counts";return params&&(url+="?"+$.param(params)),shared.basicGet(url)},identifiers=function(params){var url="//api.inaturalist.org/v1/observations/identifiers";return params&&(url+="?"+$.param(params)),shared.basicGet(url)},observers=function(params){var url="//api.inaturalist.org/v1/observations/observers";return params&&(url+="?"+$.param(params)),shared.basicGet(url)},responseToInstances=function(response){return response&&response.data&&response.data.results?_.map(response.data.results,function(r){return new iNatModels.Observation(r)}):{}},processParamsForAPI=function(p,possibleFields){var params=_.extend({},this.processParams(p,possibleFields));return"any"==params.place_id&&delete params.place_id,p.per_page&&(params.per_page=p.per_page),params},processParams=function(p,possibleFields){var params=_.extend({},p),keysToDelete=["taxon_name"];if(params._iconic_taxa){var iconic_taxa=[];angular.forEach(params._iconic_taxa,function(selected,name){selected&&iconic_taxa.push(name)}),params.iconic_taxa=iconic_taxa.length>0?iconic_taxa:[],keysToDelete.push("_iconic_taxa")}switch(params.dateType){case"exact":keysToDelete=keysToDelete.concat(["d1","d2","month"]);break;case"range":keysToDelete=keysToDelete.concat(["on","month"]);break;case"month":keysToDelete=keysToDelete.concat(["on","d1","d2"]);break;default:keysToDelete=keysToDelete.concat(["on","d1","d2","month"])}switch(keysToDelete.push("dateType"),params.createdDateType){case"exact":keysToDelete=keysToDelete.concat(["created_d1","created_d2"]);break;case"range":keysToDelete=keysToDelete.concat(["created_on"]);break;case"month":keysToDelete=keysToDelete.concat(["created_on","created_d1","created_d2"]);break;default:keysToDelete=keysToDelete.concat(["created_on","created_d1","created_d2"])}if(keysToDelete.push("createdDateType"),params.observationFields&&(_.each(_.keys(params),function(k){k.match(/field:.+/)&&delete params[k]}),_.each(params.observationFields,function(v,k){params[k]=v}),keysToDelete.push("observationFields")),possibleFields){var unknownFields=_.difference(_.keys(params),possibleFields);_.each(unknownFields,function(f){f.match(/field:.+/)||delete params[f]})}return _.each(_.keys(params),function(k){"verifiable"!=k&&(!_.isEmpty(params[k])||_.isBoolean(params[k])||_.isNumber(params[k])||keysToDelete.push(k))}),_.each(keysToDelete,function(k){k.match(/field:.+/)||delete params[k]}),_.isUndefined(params.reviewed)||params.viewer_id||!CURRENT_USER||(params.viewer_id=CURRENT_USER.id),params},hasSpatialParams=function(params){return params.place_id||params.latitude||params.lat||params.swlat};return{show:show,search:search,speciesCounts:speciesCounts,identifiers:identifiers,observers:observers,responseToInstances:responseToInstances,processParams:processParams,processParamsForAPI:processParamsForAPI,hasSpatialParams:hasSpatialParams}}]),iNatAPI.factory("PlacesFactory",["shared",function(shared){var show=function(id){var url="//api.inaturalist.org/v1/places/"+id;return shared.basicGet(url)},nearby=function(params){var url="//api.inaturalist.org/v1/places/nearby";return params&&(url+="?"+$.param(params)),shared.basicGet(url)},responseToInstances=function(response){return response&&response.data&&response.data.results?_.map(response.data.results,function(r){return new iNatModels.Place(r)}):{}};return{show:show,nearby:nearby,responseToInstances:responseToInstances}}]),iNatAPI.factory("TaxaFactory",["shared",function(shared){var show=function(id,params){var url="//api.inaturalist.org/v1/taxa/"+id;return params&&(url+="?"+$.param(params)),shared.basicGet(url)},responseToInstances=function(response){return response&&response.data&&response.data.results?_.map(response.data.results,function(r){return new iNatModels.Taxon(r)}):{}};return{show:show,responseToInstances:responseToInstances}}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/observation_search/filter_menu.html","<div class='container' id='filter-dropdown'>\n  <div id='filters-body'>\n    <div class='row'>\n      <div class='col-xs-4'>\n        <div class='row'>\n          <div class='col-xs-12'>\n            <label class='sectionlabel'>\n              {{ shared.t('show') | capitalize:'title' }}\n            </label>\n          </div>\n        </div>\n        <div class='row' id='show-filters'>\n          <div class='col-xs-6' id='filters-left-col'>\n            <div class='checkbox'>\n              <label>\n                <input ng-false-value='' ng-model='params.captive' ng-true-value='false' type='checkbox'>\n                {{ shared.t('wild') | capitalize:'title' }}\n              </label>\n            </div>\n            <div class='checkbox'>\n              <label ng-class=\"{ 'filter-changed': ( params.verifiable !== defaultParams.verifiable ) }\" tooltip-placement='right' uib-tooltip=\"{{ shared.t( 'eligible_for_research_grade' ) }}\">\n                <input ng-false-value='' ng-model='params.verifiable' type='checkbox'>\n                {{ shared.t('verifiable') | capitalize:'title' }}\n              </label>\n            </div>\n            <div class='checkbox'>\n              <label ng-class=\"{ 'filter-changed': ( params.quality_grade == 'research' ) }\">\n                <input ng-false-value='' ng-model='params.quality_grade' ng-true-value=\"'research'\" type='checkbox' value='research'>\n                {{ shared.t('research_grade') | capitalize:'title' }}\n              </label>\n            </div>\n            <div class='checkbox' ng-class=\"{ 'filter-changed': ( params.quality_grade == 'needs_id' ) }\">\n              <label>\n                <input ng-false-value='' ng-model='params.quality_grade' ng-true-value=\"'needs_id'\" type='checkbox' value='research'>\n                {{ shared.t('needs_id') | capitalize }}\n              </label>\n            </div>\n            <div class='checkbox' ng-class=\"{ 'filter-changed': params.threatened }\">\n              <label>\n                <input ng-false-value='' ng-model='params.threatened' type='checkbox'>\n                {{ shared.t('threatened') | capitalize:'title' }}\n              </label>\n            </div>\n          </div>\n          <div class='col-xs-6'>\n            <div class='checkbox' ng-class=\"{ 'filter-changed': params.introduced }\">\n              <label>\n                <input ng-false-value='' ng-model='params.introduced' type='checkbox'>\n                {{ shared.t('introduced') | capitalize:'title' }}\n              </label>\n            </div>\n            <div class='checkbox' ng-class=\"{ 'filter-changed': params.popular }\">\n              <label tooltip-placement='right' uib-tooltip=\"{{ shared.t( 'has_one_or_more_faves' ) }}\">\n                <input ng-false-value='' ng-model='params.popular' type='checkbox'>\n                {{ shared.t('popular') | capitalize:'title' }}\n              </label>\n            </div>\n            <div class='checkbox' ng-class=\"{ 'filter-changed': params.sounds }\">\n              <label>\n                <input ng-false-value='' ng-model='params.sounds' type='checkbox'>\n                {{ shared.t('has_sounds') | capitalize:'title' }}\n              </label>\n            </div>\n            <div class='checkbox' ng-class=\"{ 'filter-changed': params.photos }\">\n              <label>\n                <input ng-false-value='' ng-model='params.photos' type='checkbox'>\n                {{ shared.t('has_photos') | capitalize:'title' }}\n              </label>\n            </div>\n            <div class='checkbox' ng-class=\"{ 'filter-changed': ( ( params.user_id == currentUser.id ) || ( params.user_id == currentUser.login ) ) }\" ng-show='currentUser'>\n              <label>\n                <input ng-change='toggleShowViewerObservations( )' ng-model='showingViewerObservations' type='checkbox'>\n                {{ shared.t('your_observations') | capitalize:'title' }}\n              </label>\n            </div>\n          </div>\n        </div>\n        <div class='row'>\n          <div class='col-xs-12'>\n            <div class='form-group'>\n              <label class='sectionlabel' for='params-q'>\n                {{ shared.t('description_slash_tags') }}\n              </label>\n              <input class='form-control' id='params-q' ng-class=\"{ 'filter-changed': params.q }\" ng-model-options='{ debounce: 1000 }' ng-model='params.q' placeholder=\"{{ shared.t('blue_butterfly_etc') }}\">\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class='col-xs-4' id='filters-center-col'>\n        <div class='row'>\n          <div class='col-xs-12'>\n            <label class='sectionlabel'>\n              {{ shared.t('categories') | capitalize:'title' }}\n            </label>\n            <div class='btn-group' id='filters-categories'>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Aves }\" ng-model='params._iconic_taxa.Aves' title=\"{{ shared.t( 'all_taxa.birds' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Aves'>\n                <i class='icon-iconic-aves'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Amphibia }\" ng-model='params._iconic_taxa.Amphibia' title=\"{{ shared.t( 'all_taxa.amphibians' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Amphibia'>\n                <i class='icon-iconic-amphibia'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Reptilia }\" ng-model='params._iconic_taxa.Reptilia' title=\"{{ shared.t( 'all_taxa.reptiles' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Reptilia'>\n                <i class='icon-iconic-reptilia'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Mammalia }\" ng-model='params._iconic_taxa.Mammalia' title=\"{{ shared.t( 'all_taxa.mammals' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Mammalia'>\n                <i class='icon-iconic-mammalia'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Actinopterygii }\" ng-model='params._iconic_taxa.Actinopterygii' title=\"{{ shared.t( 'all_taxa.ray_finned_fishes' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Actinopterygii'>\n                <i class='icon-iconic-actinopterygii'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon last' ng-class=\"{ 'filter-changed': params._iconic_taxa.Mollusca }\" ng-model='params._iconic_taxa.Mollusca' title=\"{{ shared.t( 'all_taxa.mollusks' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Mollusca'>\n                <i class='icon-iconic-mollusca'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Arachnida }\" ng-model='params._iconic_taxa.Arachnida' title=\"{{ shared.t( 'all_taxa.arachnids' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Arachnida'>\n                <i class='icon-iconic-arachnida'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Insecta }\" ng-model='params._iconic_taxa.Insecta' title=\"{{ shared.t( 'all_taxa.insects' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Insecta'>\n                <i class='icon-iconic-insecta'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Plantae }\" ng-model='params._iconic_taxa.Plantae' title=\"{{ shared.t( 'all_taxa.plants' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Plantae'>\n                <i class='icon-iconic-plantae'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Fungi }\" ng-model='params._iconic_taxa.Fungi' title=\"{{ shared.t( 'all_taxa.fungi_including_lichens' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Fungi'>\n                <i class='icon-iconic-fungi'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon ' ng-class=\"{ 'filter-changed': params._iconic_taxa.Protozoa }\" ng-model='params._iconic_taxa.Protozoa' title=\"{{ shared.t( 'all_taxa.protozoans' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='Protozoa'>\n                <i class='icon-iconic-protozoa'></i>\n              </button>\n              <button class='btn btn-default iconic-taxon last' ng-class=\"{ 'filter-changed': params._iconic_taxa.unknown }\" ng-model='params._iconic_taxa.unknown' title=\"{{ shared.t( 'unknown' ) }}\" type='button' uib-btn-checkbox uib-btn-checkbox-true='unknown'>\n                <i class='icon-iconic-unknown'></i>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class='row'>\n          <div class='col-xs-12'>\n            <label class='sectionlabel' for='params-hrank'>\n              {{ shared.t('rank') | capitalize:'title' }}\n            </label>\n          </div>\n        </div>\n        <div class='row' id='filters-ranks'>\n          <div class='col-xs-6'>\n            <select class='form-control' id='params-hrank' ng-class=\"{ 'filter-changed': params.hrank }\" ng-model-options='{debounce: 1000}' ng-model='params.hrank'>\n              <option value=''>\n                {{ shared.t('high') | capitalize:'title' }}\n              </option>\n              <option value='kingdom'>\n                {{ shared.t('ranks.kingdom') | capitalize:'title' }}\n              </option>\n              <option value='phylum'>\n                {{ shared.t('ranks.phylum') | capitalize:'title' }}\n              </option>\n              <option value='subphylum'>\n                {{ shared.t('ranks.subphylum') | capitalize:'title' }}\n              </option>\n              <option value='superclass'>\n                {{ shared.t('ranks.superclass') | capitalize:'title' }}\n              </option>\n              <option value='class'>\n                {{ shared.t('ranks.class') | capitalize:'title' }}\n              </option>\n              <option value='subclass'>\n                {{ shared.t('ranks.subclass') | capitalize:'title' }}\n              </option>\n              <option value='superorder'>\n                {{ shared.t('ranks.superorder') | capitalize:'title' }}\n              </option>\n              <option value='order'>\n                {{ shared.t('ranks.order') | capitalize:'title' }}\n              </option>\n              <option value='suborder'>\n                {{ shared.t('ranks.suborder') | capitalize:'title' }}\n              </option>\n              <option value='infraorder'>\n                {{ shared.t('ranks.infraorder') | capitalize:'title' }}\n              </option>\n              <option value='superfamily'>\n                {{ shared.t('ranks.superfamily') | capitalize:'title' }}\n              </option>\n              <option value='epifamily'>\n                {{ shared.t('ranks.epifamily') | capitalize:'title' }}\n              </option>\n              <option value='family'>\n                {{ shared.t('ranks.family') | capitalize:'title' }}\n              </option>\n              <option value='subfamily'>\n                {{ shared.t('ranks.subfamily') | capitalize:'title' }}\n              </option>\n              <option value='supertribe'>\n                {{ shared.t('ranks.supertribe') | capitalize:'title' }}\n              </option>\n              <option value='tribe'>\n                {{ shared.t('ranks.tribe') | capitalize:'title' }}\n              </option>\n              <option value='subtribe'>\n                {{ shared.t('ranks.subtribe') | capitalize:'title' }}\n              </option>\n              <option value='genus'>\n                {{ shared.t('ranks.genus') | capitalize:'title' }}\n              </option>\n              <option value='genushybrid'>\n                {{ shared.t('ranks.genushybrid') | capitalize:'title' }}\n              </option>\n              <option value='species'>\n                {{ shared.t('ranks.species') | capitalize:'title' }}\n              </option>\n              <option value='hybrid'>\n                {{ shared.t('ranks.hybrid') | capitalize:'title' }}\n              </option>\n              <option value='subspecies'>\n                {{ shared.t('ranks.subspecies') | capitalize:'title' }}\n              </option>\n              <option value='variety'>\n                {{ shared.t('ranks.variety') | capitalize:'title' }}\n              </option>\n              <option value='form'>\n                {{ shared.t('ranks.form') | capitalize:'title' }}\n              </option>\n            </select>\n          </div>\n          <div class='col-xs-6'>\n            <select class='form-control' id='params-lrank' ng-class=\"{ 'filter-changed': params.hrank }\" ng-model-options='{debounce: 1000}' ng-model='params.lrank'>\n              <option value=''>\n                {{ shared.t('low') | capitalize:'title' }}\n              </option>\n              <option value='kingdom'>\n                {{ shared.t('ranks.kingdom') | capitalize:'title' }}\n              </option>\n              <option value='phylum'>\n                {{ shared.t('ranks.phylum') | capitalize:'title' }}\n              </option>\n              <option value='subphylum'>\n                {{ shared.t('ranks.subphylum') | capitalize:'title' }}\n              </option>\n              <option value='superclass'>\n                {{ shared.t('ranks.superclass') | capitalize:'title' }}\n              </option>\n              <option value='class'>\n                {{ shared.t('ranks.class') | capitalize:'title' }}\n              </option>\n              <option value='subclass'>\n                {{ shared.t('ranks.subclass') | capitalize:'title' }}\n              </option>\n              <option value='superorder'>\n                {{ shared.t('ranks.superorder') | capitalize:'title' }}\n              </option>\n              <option value='order'>\n                {{ shared.t('ranks.order') | capitalize:'title' }}\n              </option>\n              <option value='suborder'>\n                {{ shared.t('ranks.suborder') | capitalize:'title' }}\n              </option>\n              <option value='infraorder'>\n                {{ shared.t('ranks.infraorder') | capitalize:'title' }}\n              </option>\n              <option value='superfamily'>\n                {{ shared.t('ranks.superfamily') | capitalize:'title' }}\n              </option>\n              <option value='epifamily'>\n                {{ shared.t('ranks.epifamily') | capitalize:'title' }}\n              </option>\n              <option value='family'>\n                {{ shared.t('ranks.family') | capitalize:'title' }}\n              </option>\n              <option value='subfamily'>\n                {{ shared.t('ranks.subfamily') | capitalize:'title' }}\n              </option>\n              <option value='supertribe'>\n                {{ shared.t('ranks.supertribe') | capitalize:'title' }}\n              </option>\n              <option value='tribe'>\n                {{ shared.t('ranks.tribe') | capitalize:'title' }}\n              </option>\n              <option value='subtribe'>\n                {{ shared.t('ranks.subtribe') | capitalize:'title' }}\n              </option>\n              <option value='genus'>\n                {{ shared.t('ranks.genus') | capitalize:'title' }}\n              </option>\n              <option value='genushybrid'>\n                {{ shared.t('ranks.genushybrid') | capitalize:'title' }}\n              </option>\n              <option value='species'>\n                {{ shared.t('ranks.species') | capitalize:'title' }}\n              </option>\n              <option value='hybrid'>\n                {{ shared.t('ranks.hybrid') | capitalize:'title' }}\n              </option>\n              <option value='subspecies'>\n                {{ shared.t('ranks.subspecies') | capitalize:'title' }}\n              </option>\n              <option value='variety'>\n                {{ shared.t('ranks.variety') | capitalize:'title' }}\n              </option>\n              <option value='form'>\n                {{ shared.t('ranks.form') | capitalize:'title' }}\n              </option>\n            </select>\n          </div>\n        </div>\n        <div class='row'>\n          <div class='col-xs-12'>\n            <label class='sectionlabel' for='params-order-by'>\n              {{ shared.t('sort_by') | capitalize:'title' }}\n            </label>\n          </div>\n        </div>\n        <div class='row'>\n          <div class='col-xs-6'>\n            <select class='form-control' id='params-order-by' ng-class=\"{ 'filter-changed': ( params.order_by !== defaultParams.order_by ) }\" ng-model-options='{debounce: 1000}' ng-model='params.order_by'>\n              <option value='observations.id'>\n                {{ shared.t(date_added, { defaultValue: 'date added' } ) | capitalize:'title' }}\n              </option>\n              <option value='observed_on'>\n                {{ shared.t(date_observed, { defaultValue: 'date observed' } ) | capitalize:'title' }}\n              </option>\n              <option value='votes'>\n                {{ shared.t(faves, { defaultValue: 'faves' } ) | capitalize:'title' }}\n              </option>\n            </select>\n          </div>\n          <div class='col-xs-6'>\n            <select class='form-control' id='params-order' ng-class=\"{ 'filter-changed': ( params.order !== defaultParams.order ) }\" ng-model-options='{debounce: 1000}' ng-model='params.order'>\n              <option value=\"asc\">{{ shared.t(&#39;asc&#39;) | capitalize:&#39;title&#39; }}</option>\n              <option value=\"desc\">{{ shared.t(&#39;desc&#39;) | capitalize:&#39;title&#39; }}</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div class='col-xs-4' id='filters-right-col'>\n        <label class='sectionlabel'>\n          {{ shared.t( 'date_observed' ) | capitalize:'title' }}\n        </label>\n        <div class='filters-dates'>\n          <label class='radio'>\n            <input name='date-type' ng-model='params.dateType' type='radio'>\n              {{ shared.t('any') | capitalize }}\n            </input>\n          </label>\n          <label class='radio'>\n            <input name='date-type' ng-model='params.dateType' type='radio' value='exact'>\n            <span class='date-type date-type-exact'>\n              {{ shared.t('exact_date') }}\n              <input class='filters-dates-exact form-control input-sm date-picker' ng-class=\"{ 'filter-changed': processedParams.on }\" ng-click=\"params.dateType = 'exact'\" ng-model='params.on' placeholder='YYYY-MM-DD' type='text'>\n            </span>\n          </label>\n          <label class='radio'>\n            <input name='date-type' ng-model='params.dateType' type='radio' value='range'>\n            <span class='date-type date-type-range'>\n              {{ shared.t('range') }}\n              <input class='form-control input-sm date-picker' ng-class=\"{ 'filter-changed': processedParams.d1 }\" ng-click=\"params.dateType = 'range'\" ng-model='params.d1' placeholder=\"{{ shared.t('start') }}\" type='text'>\n              <input class='form-control input-sm date-picker' ng-class=\"{ 'filter-changed': processedParams.d2 }\" ng-click=\"params.dateType = 'range'\" ng-model='params.d2' placeholder=\"{{ shared.t('end') }}\" type='text'>\n            </span>\n          </label>\n          <label class='radio'>\n            <input name='date-type' ng-model='params.dateType' type='radio' value='month'>\n            <span class='date-type date-type-month'>\n              {{ shared.t('months') }}\n              <select name=\"month\" id=\"filters-dates-month\" ng-model=\"params.month\" class=\"form-control input-sm\" multiple=\"multiple\" ng-class=\"{ &#39;filter-changed&#39;: processedParams.month }\"><option value=\"1\">{{ shared.t(&#39;date_format.month.january&#39;) }}</option>\n              <option value=\"2\">{{ shared.t(&#39;date_format.month.february&#39;) }}</option>\n              <option value=\"3\">{{ shared.t(&#39;date_format.month.march&#39;) }}</option>\n              <option value=\"4\">{{ shared.t(&#39;date_format.month.april&#39;) }}</option>\n              <option value=\"5\">{{ shared.t(&#39;date_format.month.may&#39;) }}</option>\n              <option value=\"6\">{{ shared.t(&#39;date_format.month.june&#39;) }}</option>\n              <option value=\"7\">{{ shared.t(&#39;date_format.month.july&#39;) }}</option>\n              <option value=\"8\">{{ shared.t(&#39;date_format.month.august&#39;) }}</option>\n              <option value=\"9\">{{ shared.t(&#39;date_format.month.september&#39;) }}</option>\n              <option value=\"10\">{{ shared.t(&#39;date_format.month.october&#39;) }}</option>\n              <option value=\"11\">{{ shared.t(&#39;date_format.month.november&#39;) }}</option>\n              <option value=\"12\">{{ shared.t(&#39;date_format.month.december&#39;) }}</option></select>\n            </span>\n          </label>\n        </div>\n        <div id='filters-observation-fields' ng-show='canShowObservationFields( )'>\n          <label class='sectionlabel'>\n            {{ shared.t( \"observation_fields\" ) }}\n          </label>\n          <span class='observation-field' ng-repeat='(k,v) in params.observationFields'>\n            {{ k }}={{ v }}\n            <button ng-click='removeObservationField( k )'>\n              &times;\n            </button>\n          </span>\n          <input name='taxon_ids[]' type='hidden'>\n          <input name='taxon_ids' type='hidden'>\n          <input name='has[]' type='hidden'>\n          <input name='not_in_project' type='hidden'>\n          <input name='lat' type='hidden'>\n          <input name='lng' type='hidden'>\n          <input name='viewer_id' type='hidden'>\n          <input name='identified' type='hidden'>\n          <input name='captive' type='hidden'>\n          <input name='day' type='hidden'>\n          <input name='year' type='hidden'>\n          <input name='site_id' type='hidden'>\n          <input name='projects[]' type='hidden'>\n          <input name='apply_project_rules_for' type='hidden'>\n          <input name='not_matching_project_rules_for' type='hidden'>\n          <input name='list_id' type='hidden'>\n          <input name='changed_fields' type='hidden'>\n          <input name='changed_since' type='hidden'>\n          <input name='change_project_id' type='hidden'>\n        </div>\n      </div>\n    </div>\n    <div class='row'>\n      <div class='col-xs-12'>\n        <button class='btn btn-link' id='filters-more-btn' ng-class=\"{ 'collapsed': moreFiltersHidden }\" ng-click='toggleMoreFilters( )' type='button'>\n          {{ shared.t('more_filters') | capitalize:'title' }}\n          <i class='fa fa-caret-down'></i>\n          <i class='fa fa-caret-up'></i>\n        </button>\n        <div id='more-filters' ng-class=\"{ 'collapse': moreFiltersHidden }\">\n          <div class='row'>\n            <div class='col-xs-4'>\n              <div class='form-group'>\n                <label class='sectionlabel' for='params-user-id'>\n                  {{ shared.t('person') | capitalize:'title' }}\n                </label>\n                <div class='input-group'>\n                  <span class='input-group-addon icon-person'></span>\n                  <input class='form-control' name='user_name' ng-class=\"{ 'filter-changed': params.user_id }\" placeholder=\"{{ shared.t('username_or_user_id') }}\" type='search'>\n                  <input name='user_id' ng-model='params.user_id' type='hidden'>\n                </div>\n              </div>\n              <div class='form-group'>\n                <label class='sectionlabel' for='params-project-id'>\n                  {{ shared.t('project') | capitalize:'title' }}\n                </label>\n                <div class='input-group'>\n                  <span class='input-group-addon fa fa-briefcase'></span>\n                  <input class='form-control' name='project_name' ng-class=\"{ 'filter-changed': params.project_id }\" placeholder=\"{{ shared.t('name_or_slug') }}\" title=\"{{ shared.t('name_or_slug') }}\" type='search'>\n                  <input name='project_id' ng-model='params.project_id' type='hidden'>\n                </div>\n              </div>\n              <div class='form-group'>\n                <label class='sectionlabel' for='params-place-name'>\n                  {{ shared.t(\"place\") | capitalize: \"title\" }}\n                </label>\n                <div class='input-group'>\n                  <span class='input-group-addon fa fa-globe'></span>\n                  <input class='form-control' name='inat_place_name' ng-class=\"{ 'filter-changed': selectedPlace }\" placeholder=\"{{ shared.t('place') }}\" type='search'>\n                  <input name='place_id' type='hidden'>\n                </div>\n              </div>\n            </div>\n            <div class='col-xs-4'>\n              <div class='form-group'>\n                <label class='sectionlabel'>\n                  {{ shared.t( 'photo_licensing' ) | capitalize:'title' }}\n                </label>\n                <select class='form-control' ng-class=\"{ 'filter-changed': params.photo_license }\" ng-model='params.photo_license'>\n                  <option value=''>\n                    {{ shared.t( 'all' ) }}\n                  </option>\n                  <option value='CC0'>CC0</option>\n                  <option value='CC-BY'>CC-BY</option>\n                  <option value='CC-BY-NC'>CC-BY-NC</option>\n                  <option value='CC-BY-SA'>CC-BY-SA</option>\n                  <option value='CC-BY-ND'>CC-BY-ND</option>\n                  <option value='CC-BY-NC-SA'>CC-BY-NC-SA</option>\n                  <option value='CC-BY-NC-ND'>CC-BY-NC-ND</option>\n                </select>\n              </div>\n              <label class='sectionlabel'>\n                {{ shared.t( 'reviewed' ) }}\n              </label>\n              <div class='form-group' ng-class=\"{ 'filter-changed': params.reviewed }\">\n                <label class='radio-inline'>\n                  <input name='reviewed-any' ng-model='params.reviewed' type='radio'>\n                    {{ shared.t('any') | lowercase }}\n                  </input>\n                </label>\n                <label class='radio-inline'>\n                  <input name='reviewed-yes' ng-model='params.reviewed' type='radio' value='true'>\n                    {{ shared.t('yes') | lowercase }}\n                  </input>\n                </label>\n                <label class='radio-inline'>\n                  <input name='reviewed-no' ng-model='params.reviewed' type='radio' value='false'>\n                    {{ shared.t('no') | lowercase }}\n                  </input>\n                </label>\n              </div>\n            </div>\n            <div class='col-xs-4'>\n              <label class='sectionlabel'>\n                {{ shared.t( 'date_added' ) | capitalize:'title' }}\n              </label>\n              <div class='filters-dates'>\n                <label class='radio'>\n                  <input name='created-date-type' ng-model='params.createdDateType' type='radio'>\n                    {{ shared.t('any') | capitalize }}\n                  </input>\n                </label>\n                <label class='radio'>\n                  <input name='created-date-type' ng-model='params.createdDateType' type='radio' value='exact'>\n                  <span class='date-type date-type-exact'>\n                    {{ shared.t('exact_date') }}\n                    <input class='filters-dates-exact form-control input-sm date-picker' ng-class=\"{ 'filter-changed': processedParams.created_on }\" ng-click=\"params.createdDateType = 'exact'\" ng-model='params.created_on' placeholder='YYYY-MM-DD' type='text'>\n                  </span>\n                </label>\n                <label class='radio'>\n                  <input name='created-date-type' ng-model='params.createdDateType' type='radio' value='range'>\n                  <span class='date-type date-type-range'>\n                    {{ shared.t('range') }}\n                    <input class='form-control input-sm date-picker' ng-class=\"{ 'filter-changed': processedParams.created_d1 }\" ng-click=\"params.createdDateType = 'range'\" ng-model='params.created_d1' placeholder=\"{{ shared.t('start') }}\" type='text'>\n                    <input class='form-control input-sm date-picker' ng-class=\"{ 'filter-changed': processedParams.created_d2 }\" ng-click=\"params.createdDateType = 'range'\" ng-model='params.created_d2' placeholder=\"{{ shared.t('end') }}\" type='text'>\n                  </span>\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class='row' id='filters-footer'>\n    <div class='col-xs-12'>\n      <button class='btn btn-primary' ng-click='closeFilters( )' type='button'>\n        {{ shared.t('update_search') | capitalize:'title' }}\n      </button>\n      <button class='btn btn-default' ng-click='resetParams( )' type='button'>\n        {{ shared.t('reset_search_filters') | capitalize:'title' }}\n      </button>\n      <div class='pull-right' id='footer-links'>\n        <a class='btn btn-link' ng-href='/observations/identify?{{ paramsForUrl( ) }}' target='_self'>\n          <i class='icon-identification'></i>\n          <span>{{ shared.t('identify_title') }}</span>\n        </a>\n        <a class='btn btn-link' ng-href='/observations.atom?{{ paramsForUrl( ) }}' target='_self'>\n          <i class='fa fa-rss'></i>\n          <span>{{ shared.t('atom') }}</span>\n        </a>\n        <a class='btn btn-link' ng-href='/observations.kml?{{ paramsForUrl( ) }}' target='_self'>\n          <i class='fa fa-globe'></i>\n          <span>{{ shared.t('kml') }}</span>\n        </a>\n        <a class='btn btn-link' ng-href='/observations/export?{{ paramsForUrl( ) }}' target='_self'>\n          <i class='fa fa-download'></i>\n          <span>{{ shared.t('download') }}</span>\n        </a>\n      </div>\n    </div>\n  </div>\n</div>")
}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/observation_search/identifiers_table.html","<div class='sortable-table container' id='identifiers-table' infinite-scroll-disabled=\"!viewing('identifiers')\" infinite-scroll-distance='1' infinite-scroll='showMoreIdentifiers( )'>\n  <table class='table table-striped plain-table'>\n    <thead>\n      <tr>\n        <th class='rank'>\n          {{ shared.t( 'rank_position' )}}\n        </th>\n        <th class='user'>\n          {{ shared.t( 'user' )}}\n        </th>\n        <th>\n          {{ shared.t( 'identifications' )}}\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat='u in identifiers | limitTo: numberIdentifiersShown'>\n        <td class='rank'>\n          {{ shared.numberWithCommas( $index + 1 ) }}\n        </td>\n        <td>\n          <user-icon u='u'></user-icon>\n          <user-login u='u'></user-login>\n        </td>\n        <td>{{ shared.numberWithCommas( u.resultCount ) }}</td>\n      </tr>\n    </tbody>\n  </table>\n  <div class='spinner ng-cloak' ng-show='pagination.searching'>\n    <span class='fa fa-spin fa-refresh'></span>\n  </div>\n  <div class='noresults text-muted ng-cloak' ng-show='noIdentifiers( )'>\n    {{ shared.t( 'no_results_found' ) }}\n  </div>\n</div>")}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/observation_search/observers_table.html","<div class='sortable-table container' id='observers-table' infinite-scroll-disabled=\"!viewing('observers')\" infinite-scroll-distance='1' infinite-scroll='showMoreObservers( )'>\n  <table class='table table-striped plain-table'>\n    <thead>\n      <tr>\n        <th class='rank'>\n          {{ shared.t( 'rank_position' )}}\n        </th>\n        <th class='user'>\n          {{ shared.t( 'user' )}}\n        </th>\n        <th class=\"sortable sorting-desc {{ observersSort == 'observationCount' ? 'sorting' : '' }}\" ng-click=\"observersSort = '-observationCount';\">\n          {{ shared.t( 'observations' )}}\n        </th>\n        <th class=\"sortable sorting-desc {{ observersSort == 'speciesCount' ? 'sorting' : '' }}\" ng-click=\"observersSort = '-speciesCount';\">\n          {{ shared.t( 'species' )}}\n        </th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr ng-repeat=\"u in observers | orderBy:[ observersSort, '+login' ] | limitTo: numberObserversShown\">\n        <td class='rank'>\n          {{ $index + 1 }}\n        </td>\n        <td>\n          <user-icon u='u'></user-icon>\n          <user-login u='u'></user-login>\n        </td>\n        <td class=\"{{ observersSort == '-observationCount' ? 'sorting' : '' }}\">\n          {{ shared.numberWithCommas( u.observationCount ) }}\n        </td>\n        <td class=\"{{ observersSort == '-speciesCount' ? 'sorting' : '' }}\">\n          {{ shared.numberWithCommas( u.speciesCount ) }}\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class='spinner ng-cloak' ng-show='pagination.searching'>\n    <span class='fa fa-spin fa-refresh'></span>\n  </div>\n  <div class='noresults text-muted ng-cloak' ng-show='noObservers( )'>\n    {{ shared.t( 'no_results_found' ) }}\n  </div>\n</div>")}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/observation_search/results_grid.html","<div class='grid container container-fixed' id='result-grid' infinite-scroll-disabled=\"!viewing('observations', 'grid') || pagination.searching || pagination.stopped\" infinite-scroll-distance='1' infinite-scroll='showMoreObservations( )'>\n  <div class='row'>\n    <div class='col-xs-3' ng-repeat='o in observations'>\n      <div class='thumbnail borderless'>\n        <a class=\"photo {{ o.hasMedia( ) ? '' : 'iconic' }} {{ o.hasSound( ) ? 'sound' : '' }}\" href='/observations/{{ o.id }}' ng-style='shared.backgroundIf( o.photo( ) )' target='_self'>\n          <i class='icon icon-iconic-{{ o.taxon.iconicTaxonName( ) | lowercase }}'></i>\n          <i class='sound-icon fa fa-volume-up'></i>\n        </a>\n        <div class='caption'>\n          <a class='userimage' href='/people/{{ o.user.login }}' ng-style='shared.backgroundIf( o.user.icon_url )' target='_self' title='{{ o.user.login }}'>\n            <i class='icon-person' ng-hide='o.user.icon_url'></i>\n          </a>\n          <inat-taxon class='title split-taxon' taxon='o.taxon' url='/observations/{{ o.id }}'></inat-taxon>\n          <div class='meta'>\n            <span class='quality_grade {{ o.quality_grade }}'>\n              {{ o.qualityGrade( ) | capitalize:'title' }}\n            </span>\n            <span class='identifications' ng-show='o.identifications_count &gt; 0' title=\"{{ shared.t('x_identifications', {count: o.identifications_count}) }}\">\n              <i class='icon-identification'></i>\n              {{ o.identifications_count }}\n            </span>\n            <span class='comments' ng-show='o.comments_count &gt; 0' title=\"{{ shared.t('x_comments', {count: o.comments_count}) }}\">\n              <i class='icon-chatbubble'></i>\n              {{ o.comments_count }}\n            </span>\n            <span class='favorites' ng-show='o.faves_count &gt; 0' title=\"{{ shared.t('x_faves', {count: o.faves_count}) }}\">\n              <i class='fa fa-star'></i>\n              {{ o.faves_count }}\n            </span>\n            <span am-time-ago='o.time_observed_at || o.observed_on' class='pull-right' title=\"{{ shared.t('observed_on') + ' ' + (o.time_observed_at || o.observed_on ) }}\"></span>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class='spinner ng-cloak' ng-show='pagination.searching'>\n      <span class='fa fa-spin fa-refresh'></span>\n    </div>\n    <div class='noresults text-muted ng-cloak' ng-show='noObservations( )'>\n      {{ shared.t( 'no_results_found' ) }}\n    </div>\n    <div class='pages col-xs-12 ng-cloak' ng-show='showPages( )'>\n      <uib-pagination first-text='\xab' items-per-page='pagination.perPage' last-text='\xbb' max-size='10' next-text='\u203a' ng-model='pagination.page' previous-text='\u2039' total-items='pagination.total'></uib-pagination>\n    </div>\n  </div>\n</div>")}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/observation_search/results_map.html","<div class=\"{{ fullscreen ? 'fullscreen-enabled' : '' }}\" id='obs-container'>\n  <div class=\"{{ fullscreen ? 'fullscreen' : '' }}\" enable_show_all_layer='false' id='map'></div>\n  <div class='container container-fixed'>\n    <div class='row' id='maprow'>\n      <div id='map-controls'>\n        <div class='btn-group-vertical btn-group btn-group-stateless clearfix'>\n          <button class='btn btn-default' ng-click='zoomIn( )' title=\"{{ shared.t('zoom_in') }}\">\n            <i class='glyphicon glyphicon-plus'></i>\n          </button>\n          <button class='btn btn-default' ng-click='zoomOut( )' title=\"{{ shared.t('zoom_out') }}\">\n            <i class='glyphicon glyphicon-minus'></i>\n          </button>\n        </div>\n        <div class='btn-group btn-group-stateless clearfix' id='user-location-control'>\n          <button class='btn btn-default btn-icon-stupidity' ng-click='findUserLocation( )' title=\"{{ shared.t('find_your_current_location') }}\">\n            <i class='icon-locate' ng-hide='findingUserLocation'></i>\n            <i class='fa fa-refresh fa-spin' ng-class=\"{ 'fa-spin': findingUserLocation }\" ng-show='findingUserLocation'></i>\n          </button>\n        </div>\n        <div class='btn-group btn-group-stateless clearfix' id='user-location-full-screen'>\n          <button class='btn btn-default btn-icon-stupidity' ng-click='togglFullscreen( )' title=\"{{ shared.t('full_screen') }}\">\n            <i class=\"icon icon-arrows-{{ fullscreen ? 'in' : 'out' }}\"></i>\n          </button>\n        </div>\n      </div>\n      <div id='map-legend-control'>\n        <div class='btn-group btn-group-stateless dropup'>\n          <button class='btn btn-default dropdown-toggle' data-toggle='dropdown'>\n            {{ shared.t('map_legend') | capitalize:'title' }}\n            <span class='caret'></span>\n          </button>\n          <div class='dropdown-menu'>\n            <div id='map-legend-container'></div>\n          </div>\n        </div>\n      </div>\n      <div class='col-xs-4 col-xs-offset-8'>\n        <div id='obs'>\n          <div class='div' infinite-scroll-disabled=\"!viewing('observations', 'map') || pagination.searching || pagination.stopped\" infinite-scroll-parent='true' infinite-scroll='showMoreObservations( )'>\n            <observation-snippet ng-mouseleave='hideInfowindow( )' ng-mouseover='showInfowindow( o )' ng-repeat='o in observations' o='o'></observation-snippet>\n          </div>\n          <div class='spinner ng-cloak' ng-show='pagination.searching'>\n            <span class='fa fa-spin fa-refresh'></span>\n          </div>\n          <div class='noresults text-muted ng-cloak' ng-show='noObservations( )'>\n            {{ shared.t( 'no_results_found' ) }}\n          </div>\n          <div class='pages col-xs-12 ng-cloak' ng-show='showPages( )'>\n            <uib-pagination items-per-page='pagination.perPage' max-size='0' next-text='Next \u203a' ng-model='pagination.page' previous-text='\u2039 Previous' total-items='pagination.total'></uib-pagination>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div id='infoWindowSnippet'>\n  <div class='infowindow obs-container'>\n    <observation-snippet o='infoWindowObservation'></observation-snippet>\n  </div>\n</div>")}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/observation_search/results_table.html","<div class='sortable-table container' id='result-table'>\n  <table class='table table-striped'>\n    <thead>\n      <tr>\n        <th class='media'>\n          {{ shared.t('media') | capitalize }}\n        </th>\n        <th class='name'>\n          {{ shared.t('name') | capitalize }}\n        </th>\n        <th class='user'>\n          {{ shared.t('user') | capitalize }}\n        </th>\n        <th class=\"observed sortable {{ params.order_by == 'observed_on' ? (params.order == 'asc' ? 'sorting sorting-asc' : 'sorting sorting-desc') : '' }}\" ng-click=\"orderBy('observed_on')\">\n          {{ shared.t('observed') | capitalize }}\n        </th>\n        <th class='place'>\n          {{ shared.t('place') | capitalize }}\n        </th>\n        <th class=\"added sortable {{ params.order_by == 'observations.id' ? (params.order == 'asc' ? 'sorting sorting-asc' : 'sorting sorting-desc') : ''}}\" ng-click=\"orderBy( 'observations.id' )\">\n          {{ shared.t('added') | capitalize }}\n        </th>\n      </tr>\n    </thead>\n    <tbody infinite-scroll-disabled=\"!viewing('observations', 'table') || pagination.searching || pagination.stopped\" infinite-scroll-distance='1' infinite-scroll='showMoreObservations( )'>\n      <tr ng-repeat='o in observations'>\n        <td>\n          <a class=\"img {{ o.hasMedia( ) ? '' : 'iconic'}} {{ o.hasSound( ) ? 'sound' : '' }}\" href='/observations/{{ o.id }}' ng-style='shared.backgroundIf( o.photo( ) )' target='_self'>\n            <i class='icon icon-iconic-{{ o.taxon.iconicTaxonName( ) | lowercase }}'></i>\n            <i class='sound-icon fa fa-volume-up'></i>\n            <span class='photo-count ng-cloak' ng-show='o.photos.length &gt; 1'>\n              {{ o.photos.length }}\n            </span>\n          </a>\n        </td>\n        <td>\n          <inat-taxon class='split-taxon' taxon='o.taxon' url='/observations/{{ o.id }}'></inat-taxon>\n          <div class='meta'>\n            <span class='quality_grade {{ o.quality_grade }}'>\n              {{ o.qualityGrade( ) | capitalize:'title' }}\n            </span>\n            <span class='identifications' ng-show='o.identifications_count &gt; 0' title=\"{{ shared.t('x_identifications', {count: o.identifications_count}) }}\">\n              <i class='icon-identification'></i>\n              {{ o.identifications_count }}\n            </span>\n            <span class='comments' ng-show='o.comments_count &gt; 0' title=\"{{ shared.t('x_comments', {count: o.comments_count}) }}\">\n              <i class='icon-chatbubble'></i>\n              {{ o.comments_count }}\n            </span>\n            <span class='favorites' ng-show='o.faves_count &gt; 0' title=\"{{ shared.t('x_faves', {count: o.faves_count}) }}\">\n              <i class='fa fa-star'></i>\n              {{ o.faves_count }}\n            </span>\n          </div>\n        </td>\n        <td class='user'>\n          <a class='user userimage' href='/observations/{{ o.id }}' ng-style='shared.backgroundIf( o.user.icon_url )' target='_self' title='{{ o.user.login }}'>\n            <i class='icon-person' ng-hide='o.user.icon_url'></i>\n          </a>\n          <a href='/observations/{{ o.id }}' target='_self' title='{{ o.user.login }}'>\n            {{ o.user.login }}\n          </a>\n        </td>\n        <td class=\"{{ params.order_by == 'observed_on' ? 'sorting' : '' }}\" title=\"{{ shared.t('observed_on') }} {{ o.time_observed_at || o.observed_on }}\">\n          <inat-calendar-date date='o.observed_on_details.date' time='o.time_observed_at' timezone='o.observed_time_zone'></inat-calendar-date>\n        </td>\n        <td>\n          <i class='fa fa-map-marker'></i>\n          {{ o.displayPlace( ) }}\n        </td>\n        <td class=\"{{ params.order_by == 'observations.id' ? 'sorting' : '' }}\" title=\"{{ shared.t('created_on') }} {{ o.created_at }}\">\n          <inat-calendar-date date='o.created_at_details.date' time='o.created_at' timezone='o.created_time_zone'></inat-calendar-date>\n        </td>\n      </tr>\n    </tbody>\n  </table>\n  <div class='spinner ng-cloak' ng-show='pagination.searching'>\n    <span class='fa fa-spin fa-refresh'></span>\n  </div>\n  <div class='noresults text-muted ng-cloak' ng-show='noObservations( )'>\n    {{ shared.t( 'no_results_found' ) }}\n  </div>\n  <div class='pages col-xs-12 ng-cloak' ng-show='showPages( )'>\n    <uib-pagination first-text='\xab' items-per-page='pagination.perPage' last-text='\xbb' max-size='10' next-text='\u203a' ng-model='pagination.page' previous-text='\u2039' total-items='pagination.total'></uib-pagination>\n  </div>\n</div>")}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/observation_search/taxa_grid.html","<div class='container bootstrap-10' id='taxa-grid' infinite-scroll-disabled=\"!viewing('species')\" infinite-scroll-distance='1' infinite-scroll='showMoreTaxa( )'>\n  <div class='row grid'>\n    <div class='col-xs-2 cell' ng-repeat='t in taxa | limitTo: numberTaxaShown'>\n      <div class='thumbnail borderless'>\n        <a class=\"photo {{ t.photo( ) ? '' : 'iconic'}}\" href='/taxa/{{ t.id }}' ng-style='shared.backgroundIf( t.photo( ) )' target='_self'>\n          <i class='icon icon-iconic-{{ t.iconicTaxonName( ) | lowercase }}'></i>\n        </a>\n        <div class='corner conservation-status {{ t.conservation_status.status }}' ng-show='t.conservationStatus( )' title='{{ shared.taxonStatusTitle( t ) }}'>\n          {{ t.conservation_status.status }}\n        </div>\n        <div class='corner establishment-means {{ t.establishmentMeansCode( ) }}' ng-show='t.establishmentMeansCode( ) &amp;&amp; !t.conservationStatus( )' title='{{ shared.taxonMeansTitle( t ) }}'>\n          {{ t.establishmentMeansCode( ) }}\n        </div>\n        <div class='photometa'>\n          <a ng-href='{{ extendBrowserLocation({ taxon_id: t.id, view: null, page: null }) }}' target='_self'>\n            {{ shared.t( 'x_observations', { count: (t.resultCount == 1 ? t.resultCount : shared.numberWithCommas( t.resultCount ) ) } ) }}\n          </a>\n          <div class='pull-right'>\n            <div class='photo-license' tooltip-popup-delay='500' uib-tooltip='{{ t.photoAttribution( ) }}'>\n              {{ t.photoLicenseShort( ) }}\n            </div>\n          </div>\n        </div>\n        <div class='caption'>\n          <inat-taxon class='title split-taxon' taxon='t' url='/taxa/{{ t.id }}'></inat-taxon>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class='spinner ng-cloak' ng-show='pagination.searching'>\n    <span class='fa fa-spin fa-refresh'></span>\n  </div>\n  <div class='noresults text-muted ng-cloak' ng-show='noTaxa( )'>\n    {{ shared.t( 'no_results_found' ) }}\n  </div>\n</div>")}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/shared/observation.html","<div class='media observation'>\n  <div class='media-left'>\n    <a href='/observations/{{ o.id }}' target='_self'>\n      <div class=\"media-object photo {{ o.hasMedia( ) ? '' : 'iconic' }} {{ o.hasSound( ) ? 'sound' : '' }}\" ng-style='shared.backgroundIf( o.photo( ) )'>\n        <i class='icon icon-iconic-{{ o.taxon.iconicTaxonName( ) | lowercase }}'></i>\n        <i class='sound-icon fa fa-volume-up'></i>\n      </div>\n    </a>\n  </div>\n  <div class='media-body'>\n    <a class='userimage pull-right' href='/people/{{ o.user.login }}' ng-style='shared.backgroundIf(o.user.icon_url)' target='_self' tooltip-placement='left' uib-tooltip='{{ o.user.login }}'>\n      <i class='icon-person' ng-hide='o.user.icon_url'></i>\n    </a>\n    <inat-taxon class='split-taxon' taxon='o.taxon' url='/observations/{{ o.id }}'></inat-taxon>\n    <div class='dateloc'>\n      <span class='location' title='{{ o.displayPlace() }}'>\n        <div class='hidden-lg'>{{ o.displayPlace() | characters:6:true }}</div>\n        <div class='visible-lg-inline-block'>{{ o.displayPlace() | characters:18:true }}</div>\n      </span>\n      <span class='date' title=\"{{ shared.t('observed_on') }} {{ o.time_observed_at || o.observed_on }}\">\n        <span class='hidden-lg'>{{ (o.observed_on | amDateFormat : 'l') || shared.t('unknown') }}</span>\n        <span class='visible-lg-inline-block'>{{ (o.observed_on | amDateFormat : 'll') || shared.t('unknown') }}</span>\n      </span>\n    </div>\n    <div class='meta ng-cloak'>\n      <span class='quality_grade {{ o.quality_grade }}'>\n        {{ o.qualityGrade( ) | capitalize:'title' }}\n      </span>\n      <span class='identifications' ng-show='o.identifications_count &gt; 0' title=\"{{ shared.t('x_identifications', {count: o.identifications_count}) }}\">\n        <i class='icon-identification'></i>\n        {{ o.identifications_count }}\n      </span>\n      <span class='comments' ng-show='o.comments_count &gt; 0' title=\"{{ shared.t('x_comments', {count: o.comments_count}) }}\">\n        <i class='icon-chatbubble'></i>\n        {{ o.comments_count }}\n      </span>\n      <span class='favorites' ng-show='o.faves_count &gt; 0' title=\"{{ shared.t('x_faves', {count: o.faves_count}) }}\">\n        <i class='fa fa-star'></i>\n        {{ o.faves_count }}\n      </span>\n      <span am-time-ago='o.created_at' class='created_at pull-right' title=\"{{ shared.t('added_on') }} {{ o.created_at }}\"></span>\n    </div>\n  </div>\n</div>")}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/shared/taxon.html","<span class=\"taxon {{ taxon.rank }} {{ iconicTaxonNameForID(taxon.iconic_taxon_id) }} {{ taxon.preferred_common_name ? 'has-com-name' : ''}}\">\n  <a class='icon icon-iconic-{{ iconicTaxonNameForID(taxon.iconic_taxon_id) | lowercase }}' href=\"{{ url || '/taxa/'+taxon.id }}\" target='_self'></a>\n  <a class=\"noname {{ taxon.id ? '' : 'display-name' }}\" href='{{ url }}' ng-show='!taxon.id' target='_self'>\n    {{ shared.t('unknown') }}\n  </a>\n  <a class=\"comname {{ taxon.preferred_common_name ? 'display-name' : ''}}\" href='{{ url }}' ng-show='taxon.preferred_common_name' target='_self'>\n    {{ taxon.preferred_common_name }}\n  </a><a class=\"sciname {{ taxon.rank }} {{ taxon.preferred_common_name ? '' : 'display-name' }}\" href='{{ url }}' ng-show='taxon.name' target='_self'><span class='rank' ng-show='taxon.preferred_common_name &amp;&amp; taxon.rank_level &gt; 10'>{{ taxon.rank | capitalize }}</span>{{ taxon.name }}</a></span>")}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/shared/user_icon.html","<a class='user userimage' href='/people/{{ u.login }}' ng-style='shared.backgroundIf( u.icon_url )' target='_self' title='{{ u.login }}'>\n  <i class='icon-person' ng-hide='u.icon_url'></i>\n</a>")}]),angular.module("templates").run(["$templateCache",function($templateCache){$templateCache.put("ang/templates/shared/user_login.html","<a href='/people/{{ u.login }}' target='_self' title='{{ u.login }}'>\n  {{ u.login }}\n</a>")}]);